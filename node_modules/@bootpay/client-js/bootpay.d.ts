import 'core-js/es/promise';
import "regenerator-runtime/runtime";
import { BootpayAnalyticsModel, BootpayAnalyticsUserModel, RequestAuthenticationModel, RequestPaymentModel, RequestSubscriptionModel } from "./models/bootpay-interface";
import { BootpayRequestPaymentManager } from "./lib/bootpay";
import { BootpayAnalyticsManager } from './lib/analytics';
interface BootpayInterface {
    $payment: BootpayRequestPaymentManager;
    $analytics: BootpayAnalyticsManager;
    requestPayment(data: RequestPaymentModel): Promise<any>;
    requestSubscription(data: RequestSubscriptionModel): Promise<any>;
    requestAuthentication(data: RequestAuthenticationModel): Promise<any>;
    confirm(): Promise<any>;
    errorHandler(data: any): any;
    setEnvironmentMode(env: string): void;
    setApplicationId(applicationId: string | undefined): string | undefined;
    setVersion(version: string, name: string): void;
    setLogLevel(level: number): void;
    setUUID(uuid: string): void;
    setDevice(deviceType: string): number;
    send(data: BootpayAnalyticsModel): Promise<any>;
    login(data: BootpayAnalyticsUserModel): Promise<any>;
    logout(): void;
    readyToPopup(): void;
    setLocale(locale: string): void;
    dismiss(closedEvent: boolean): void;
    destroy(): void;
}
declare global {
    interface Window {
        Bootpay: BootpayInterface;
        CustomEvent: any;
    }
}
declare const Bootpay: BootpayInterface;
export default Bootpay;
