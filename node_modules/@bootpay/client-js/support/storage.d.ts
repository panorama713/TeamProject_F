import { BootpayManager } from "./bootpay-manager";
export interface SessionUserInterface {
    id: string;
    time: number;
}
declare class StorageManager extends BootpayManager {
    $storage: any;
    constructor();
    /**
     * Local Storage 에 데이터를 가져온다
     * Comment by Gosomi
     * @date: 2021-02-18
     * @param key: string
     * @returns string
     */
    get(key: string): string | undefined;
    /**
     * Local Storage에 데이터를 저장
     * Comment by Gosomi
     * @date: 2021-02-18
     * @param key: string
     * @param value: any
     * @returns any
     */
    set(key: string, value: any): any;
    /**
     * 현재 사용자의 고유 UUID를 Local Storage에서 가져온다
     * Comment by Gosomi
     * @date: 2021-02-18
     * @returns string
     */
    currentUserUUID(): string;
    /**
     * UUID를 외부 값으로 설정
     * Comment by GOSOMI
     * @date: 2021-12-22
     * @param uuid: string
     * @returns string
     */
    setUUID(uuid: string): string;
    /**
     * Local Storage 에서 JSON -> Object 변환해서 가져온다
     * Comment by Gosomi
     * @date: 2021-02-18
     * @param key: string
     * @returns object
     */
    getToJSON(key: string): any;
    /**
     * Local Storage 에서 Object -> JSON으로 데이터를 변환해서 저장한다
     * Comment by Gosomi
     * @date: 2021-02-18
     * @param key: string
     * @param value: any
     * @returns any
     */
    setToJSON(key: string, value: any): any;
}
export declare class SessionStorageManager extends StorageManager {
    constructor();
    /**
     * 현재 결제의 Session key를 가져온다. 1800초 ( 30분 ) 초과되면 세션을 갱신한다
     * Comment by Gosomi
     * @date: 2021-02-18
     * @returns string
     */
    currentSessionKey(): string;
    /**
     * 재방문 시간을 리턴한다
     * Comment by GOSOMI
     * @date: 2021-05-12
     * @returns number
     */
    currentTimeTerm(): number;
    currentTime(): number;
    setTime(time: number): void;
    /**
     * 사용할 기본 키를 조합한다
     * Comment by GOSOMI
     * @date: 2021-05-20
     */
    generateKey(): string;
    /**
     * 사용자 정보를 저장
     * Comment by GOSOMI
     * @date: 2022-03-02      @returns
     */
    setUser(data: SessionUserInterface | undefined): SessionUserInterface | undefined;
    /**
     * 사용자 정보를 가져온다
     * Comment by GOSOMI
     * @date: 2022-03-02
     */
    getUser(): SessionUserInterface | undefined;
}
export declare const SessionStorage: SessionStorageManager;
export {};
