import { UserTokenTemplateManager } from "./lib/template/user-token";
import { BiometricDataModel, RequestPaymentWalletModel } from "./models/bootpay-sdk-interface";
interface BootpaySdkInterface {
    $templateUserToken: UserTokenTemplateManager;
    errorHandler(data: any): any;
    setEnvironmentMode(env: string): void;
    setLogLevel(level: number): void;
    setUUID(uuid: string): void;
    setDevice(deviceType: string): number;
    requestPasswordToken(userToken: string): Promise<string>;
    requestChangePassword(userToken: string): Promise<string>;
    requestAddCard(userToken: string): Promise<any>;
    wallets(userToken: string): Promise<any>;
    destroyWallet(data: RequestPaymentWalletModel): Promise<any>;
    createBiometricAuthenticate(biometricData: BiometricDataModel): Promise<any>;
    destroyBiometricAuthenticate(biometricData: BiometricDataModel): Promise<any>;
    requestWalletPayment(data: RequestPaymentWalletModel): Promise<any>;
    dismiss(): void;
}
declare global {
    interface Window {
        BootpaySDK: BootpaySdkInterface;
    }
}
declare const BootpaySDK: BootpaySdkInterface;
export default BootpaySDK;
