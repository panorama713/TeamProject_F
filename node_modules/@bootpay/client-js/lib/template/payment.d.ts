import { TemplateManager } from "../../support/template-manager";
import { ConfirmModel } from "../../models/bootpay-interface";
import '../../stylesheets/common';
declare class TemplatePaymentManager extends TemplateManager {
    $template: string;
    $formId: string;
    $iFrameId: string;
    $windowId: string;
    $paymentWindowId: string;
    $popupWindow: string;
    $confirmFormId: string;
    $confirmIFrame: string;
    $popupUrl?: string;
    $closeButton: string;
    $popupItemNameId: string;
    $popupPriceId: string;
    $env: any;
    $popup?: any;
    $popupWatcher?: any;
    $currentReceiptId?: string;
    mode: string;
    modeToMessage: any;
    modeApiUrl: any;
    popupLocaleMessage: any;
    constructor();
    template(): string;
    /**
     * Locale을 설정
     * Comment by GOSOMI
     * @date: 2022-06-09
     */
    templateReload(): void;
    /**
     * 결제를 시작한다
     * Comment by GOSOMI
     * @date: 2021-05-12
     * @param data: any
     * @param mode: string
     * @returns Promise<any>
     */
    start(data: any, mode?: string): Promise<ConfirmModel>;
    /**
     * 결제 승인을 위한 form 데이터를 미리 만들어둔다
     * Comment by GOSOMI
     * @date: 2021-05-20
     * @param url: string
     * @returns void
     */
    setConfirmFormUrl(url: string): void;
    /**
     * 결제 승인
     * Comment by GOSOMI
     * @date: 2021-05-20
     */
    confirm(): Promise<any>;
    /**
     * 팝업창을 띄우기 위한 준비
     * Comment by GOSOMI
     * @date: 2021-05-12
     * @returns void
     */
    createPopupButton(displayData: any): void;
    /**
     * 팝업창을 띄운다
     * Comment by GOSOMI
     * @date: 2021-06-23
     */
    readyToPopup(url?: string | undefined): void;
    /**
     * 팝업창을 닫는다
     * Comment by GOSOMI
     * @date: 2021-05-12
     * @returns void
     */
    closePopup(): void;
    /**
     * POPUP url 정보를 가져온다
     * Comment by GOSOMI
     * @date: 2021-06-23
     * @param url: string | undefined
     * @returns string
     */
    getPopupUrl(url: string | undefined): string | undefined;
    /**
     * Popup 이후 Parent 페이지 이동 관련 이벤트 컨트롤
     * Comment by GOSOMI
     * @date: 2021-06-23
     */
    bindParentEventOnPopup(): void;
    /**
     * iFrame 결제창을 보여준다
     * Comment by GOSOMI
     * @date: 2021-05-12
     * @returns void
     */
    showPaymentiFrame(showCloseButton?: boolean): void;
    /**
     * 팝업 안내 메세지를 보여준다
     * Comment by GOSOMI
     * @date: 2021-06-23
     * @returns void
     */
    showPopupMessage(displayData: any): void;
    /**
     * 팝업 버튼 창을 닫는다
     * Comment by GOSOMI
     * @date: 2021-06-23
     */
    hidePopupMessage(): void;
    /**
     * 결제창을 삭제한다
     * Comment by GOSOMI
     * @date: 2021-05-12
     * @returns void
     */
    destroy(): void;
    /**
     * IFrame 창을 컨트롤한다
     * Comment by GOSOMI
     * @date: 2021-05-18
     */
    iFrameResize(resizeData: any): void;
    /**
     * 결제 iFrame창을 감춘다
     * Comment by GOSOMI
     * @date: 2021-05-20
     * @returns void
     */
    hidePaymentiFrame(): void;
    /**
     * 출력할 메세지를 선택적으로 보여준다
     * Comment by GOSOMI
     * @date: 2021-10-28
     * @param messageType: string
     * @returns string
     */
    message(messageType: string): any;
    /**
     * Iframe창의 URL로 이동한다
     * Comment by GOSOMI
     * @date: 2022-01-12
     */
    moveToUrl(url: string): void;
    apiUrl(): any;
}
export declare const TemplatePayment: TemplatePaymentManager;
export {};
