import { TemplateManager } from "../../support/template-manager";
import { BootpayUserTokenEventManager } from "../event/user-token";
import { SessionStorageManager } from "../../support/storage";
import { BiometricDataModel, RequestPaymentWalletModel } from "../../models/bootpay-sdk-interface";
export declare class UserTokenTemplateManager extends TemplateManager {
    $session: SessionStorageManager;
    $template: string;
    $windowId: string;
    $iFrameId: string;
    $userWindowId: string;
    $bootpaySdkFormId: string;
    $event: BootpayUserTokenEventManager;
    deviceType: number;
    constructor();
    /**
     * DeviceType을 지정한다
     * Comment by GOSOMI
     * @date: 2022-02-24
     */
    setDevice(deviceType: number): number;
    template(): string;
    /**
     * 보낼 데이터를 셋팅한다
     * Comment by GOSOMI
     * @date: 2022-02-25
     */
    setParams(method: string, data: any): void;
    /**
     * 요청
     * Comment by GOSOMI
     * @date: 2022-02-16
     */
    request(requestType: string, userToken: string): Promise<string>;
    /**
     * 카드 추가 SDK
     * Comment by GOSOMI
     * @date: 2022-02-18
     */
    addCard(userToken: string): Promise<any>;
    /**
     * 간편결제 리스트 가져오기
     * Comment by GOSOMI
     * @date: 2022-02-25
     */
    wallets(userToken: string): Promise<any>;
    /**
     * 간편결제 Wallet 삭제 요청
     * Comment by GOSOMI
     * @date: 2022-02-28
     */
    destroyWallet(data: RequestPaymentWalletModel): Promise<any>;
    /**
     * 생체 인식 정보 등록하기
     * Comment by GOSOMI
     * @date: 2022-02-25
     */
    createBiometricAuthenticate(biometricData: BiometricDataModel): Promise<unknown>;
    /**
     * 생체 인식 정보 삭제
     * Comment by GOSOMI
     * @date: 2022-02-25
     */
    destroyBiometricAuthenticate(biometricData: BiometricDataModel): Promise<unknown>;
    /**
     * Wallet Payment 요청
     * Comment by GOSOMI
     * @date: 2022-02-25
     */
    requestWalletPayment(data: RequestPaymentWalletModel): Promise<unknown>;
    /**
     * iFrame src로 이동
     * Comment by GOSOMI
     * @date: 2022-02-16
     */
    goiFrameUrl(method: string, url: string, data?: any): void;
    toMethod(method: string): string;
    /**
     * iFrame을 Resize
     * Comment by GOSOMI
     * @date: 2022-02-16
     */
    iFrameResize(resizeData: any): void;
    /**
     * request payment data를 재구성한다
     * Comment by GOSOMI
     * @date: 2022-02-25
     */
    regenerateRequestPayment(data: RequestPaymentWalletModel): RequestPaymentWalletModel;
    /**
     * show Password Token Window
     * Comment by GOSOMI
     * @date: 2022-02-16
     */
    show(): void;
    /**
     * Destroy
     * Comment by GOSOMI
     * @date: 2022-02-16
     */
    destroy(): void;
}
export declare const UserTokenTemplate: UserTokenTemplateManager;
